import os
import openai
from dotenv import load_dotenv
def get_prompt():
    return '''## 1.
Моя компания находится в Шарлотт (Северная Каролина, США).

## 2.
Моя компания предоставляет услуги переезда 2 типов:
1.1) Локальные: в радиусе 50 миль от пункта 1. 
1.2) Глобальные: из 1.1 в любую точку США.

## 3.
Я рекламирую услуги моей компании (пункт 1) в поисковой выдаче Google посредством Google Ads.

## 4. Моя стратегическая задача
Я хочу, чтобы объявления рекламной кампании пункта 3 не показывались в поисковой выдаче Google, если пользователь Google (далее — `User`) сделал нерелевантный услугам (пункт 2) компании поисковый запрос.

## 4. Как я хочу выполнить задачу 4
Я хочу выполнить задачу 4 следующим способом:
4.1) Составляется список нерелевантных поисковых запросов (пункт 5 ниже).
4.2) Для каждого элемента списка поисковых запросов (пункт 5 ниже) определить: релевантен ли этот запрос услугам моей компании.

## 5.Список поисковых запросов
railcar mover rental
#1 pet mover
#1 us pet mover
√© preciso mover
02 01 mover 4029357733 can s618034583078548 card 3466
02 honda crv does not move then starts moving
1 2 x 170 inch belt mover deck
1 64 round bale mover
1 bedroom long distance mover canada
1 day mover salary

## 6. Твоя задача
Выполни 4.2.

## 7. Критерии нерелевантности поискового запроса
Считай запрос нерелевантным, если для этого запроса справедливо хотя бы одно из утверждений этого пункта 7:
### 7.1.
Запрос не соответствует услугами компании (пункт 2).
### 7.2.
`User`'у нужен слишком мелкий переезд.
### 7.3.
`User` ищет конкурентов моей компании.
Например: запрос содержит названия брендов, производителей, моделей и т.д.
### 7.4.
`User` хочет выполнить переезд самостоятельно или проводит общее исследование (например, ищет процесс, этапы и т.д.).
### 7.5.
`User` ограничен в бюджете и ищет дешевые услуги.

## 8. Формат твоего ответа
### 8.1.
Твой ответ должен быть таблицей с 4 колонками.
## 8.2.
Каждой строке списка пункта 5 должна соответствовать ровно одна строка твоей таблицы.
## 8.3.
Строки таблицы должны распологаться ровно в той же последовательности, что и элементы списка пункта 5.
## 8.4.
У каждой строки таблицы должны быть ровно 5 ячеек:
8.4.1) Порядковый номер строки (начинай с 1).
8.4.2) Элемент списка пункта 5.
8.4.3) Считаешь ли ты поисковый запрос 8.4.2 релевантным услугам моей компании? (на основе пункта 7 выше)
Значением ячейки должно быть ровно одно слово: «да» или «нет».
8.4.4) Если значением ячейки 8.4.3 является «нет», то укажи конкретные подпункты пункта 7 выше, на основе которых ты принял рещение 8.4.3.
Значением ячейки должен быть просто список подпунктов пункта 7, через запятую.
8.4.5) Если значением ячейки 8.4.3 является «нет», то укажи правила для Google Ads в формате Google Ads, которые будут выполнять для этого конкретого запроса задачу пункта 4.

## 9. Пример ответа в правильном формате
~~~
| № | Поисковый запрос | Релевантный? | Причины нерелевантности | Правило для Google Ads |
|---|-----------------|--------------|----------------------|---------------------|
| 1 | railcar mover rental | нет | 7.1, 7.3 | -`railcar mover` -rental |
| 2 | #1 pet mover | нет | 7.1, 7.3 | -`pet mover` |
| 3 | #1 us pet mover | нет | 7.1, 7.3 | -`pet mover` -`us pet` |
| 4 | √© preciso mover | нет | 7.1, 7.4 | -`preciso mover` |
| 5 | 02 01 mover 4029357733 can s618034583078548 card 3466 | нет | 7.1 | -`card` -`can` |
| 6 | 02 honda crv does not move then starts moving | нет | 7.1 | -`honda` -`crv` -`starts moving` |
| 7 | 1 2 x 170 inch belt mover deck | нет | 7.1, 7.3 | -`belt mover` -`mover deck` |
| 8 | 1 64 round bale mover | нет | 7.1, 7.3 | -`bale mover` |
| 9 | 1 bedroom long distance mover canada | нет | 7.2, 7.5 | -`1 bedroom` |
| 10 | 1 day mover salary | нет | 7.1, 7.4 | -`mover salary` |
~~~
'''

def create_table():
    load_dotenv()
    openai.api_key = os.getenv('OPENAI_KEY')
    client = openai.OpenAI()
    r = client.chat.completions.create(
        model='o1-preview',
        messages=[
            {'role': 'user', 'content': get_prompt()},
        ],
    )
    return r.choices[0].message.content

def main():
    table = create_table()
    print(table)

if __name__ == '__main__':
    main()
