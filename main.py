import os
import openai
from dotenv import load_dotenv
def get_prompt():
    return '''## 1.
Моя компания находится в Шарлотт (Северная Каролина, США).

## 2.
Моя компания предоставляет услуги переезда 2 типов:
1.1) Локальные: в радиусе 50 миль от пункта 1. 
1.2) Глобальные: из 1.1 в любую точку США.

## 3.
Я рекламирую услуги моей компании (пункт 1) в поисковой выдаче Google посредством Google Ads.

## 4. Моя стратегическая задача
Я хочу, чтобы объявления рекламной кампании пункта 3 не показывались в поисковой выдаче Google, если пользователь Google (далее — `User`) сделал нерелевантный услугам (пункт 2) компании поисковый запрос.

## 4. Как я хочу выполнить задачу 4
Я хочу выполнить задачу 4 следующим способом:
4.1) Составляется список нерелевантных поисковых запросов (пункт 5 ниже).
4.2) Для каждого элемента списка поисковых запросов (пункт 5 ниже) определить: релевантен ли этот запрос услугам моей компании.

## 5.Список поисковых запросов
railcar mover rental
#1 pet mover
#1 us pet mover
√© preciso mover
02 01 mover 4029357733 can s618034583078548 card 3466
02 honda crv does not move then starts moving
1 2 x 170 inch belt mover deck
1 64 round bale mover
1 bedroom long distance mover canada
1 day mover salary

## 6. Твоя задача
Выполни 4.2 посредством разработки программы на языке Python, которая использует API OpenAI.

## 7. Критерии нерелевантности поискового запроса
Считай запрос нерелевантным, если для этого запроса справедливо хотя бы одно из утверждений этого пункта 7:
### 7.1.
Запрос не соответствует услугами компании (пункт 2).
### 7.2.
`User`'у нужен слишком мелкий переезд.
### 7.3.
`User` ищет конкурентов моей компании.
Например: запрос содержит названия брендов, производителей, моделей и т.д.
### 7.4.
`User` хочет выполнить переезд самостоятельно или проводит общее исследование (например, ищет процесс, этапы и т.д.).
### 7.5.
`User` ограничен в бюджете и ищет дешевые услуги.'''

def create_request_message():
    return '''Проанализируй каждую поисковую фразу из пункта 5 и для каждой выполни 4.2. Покажи результат в таблице с 5 колонками согласно 8.4. Если запрос нерелевантен, укажи причины из пункта 7 и правила Google Ads.'''

def create_table():
    load_dotenv()
    openai.api_key = os.getenv('OPENAI_KEY')
    client = openai.OpenAI()
    r = client.chat.completions.create(
        model='o1-preview',
        messages=[
            {'role': 'system', 'content': get_prompt()},
            {'role': 'user', 'content': create_request_message()}
        ],
        temperature=0
    )
    return r.choices[0].message.content

def main():
    table = create_table()
    print(table)

if __name__ == '__main__':
    main()
